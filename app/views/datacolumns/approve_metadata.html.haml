.div.pb-3
  .font-weight-bold.text-dark
    Column:
  - if @datacolumn.columnheader.present?
    .font-weight-normal.text-dark
      = @datacolumn.columnheader
  - else
    .font-weight-normal.text-muted
      No information available

// description
%p
  Here you can confirm the metadata and the acknowledgements for each of your
  the columns in your dataset. Thus, you can mention people which helped with
  part of the data collection e.g. or during the field work.

// form user
= simple_form_for @datacolumn, url: update_metadata_datacolumn_path(@datacolumn), method: :post,
  wrapper_mappings: { check_boxes: :vertical_collection, radio_buttons: :vertical_collection, file: :custom_file, boolean: :custom_boolean_switch } do |f|
  = f.error_notification
  = f.input :columnheader
  = f.input :unit
  = f.input :tag_list, input_html: { value: f.object.tag_list.join(","), data: { role: 'tagsinput' } }
  = f.input :definition, input_html: { rows: 10 }
  = f.input :instrumentation, input_html: { rows: 10 }
  = f.input :informationsource, label: "References", input_html: { rows: 10 }
  = f.input :comment, input_html: { rows: 10 }
  = label_tag 'people', 'Acknowledged'
  - unless @datacolumn.acknowledge_unknown.blank?
    = hidden_field_tag "datacolumn[acknowledge_unknown]", @datacolumn.acknowledge_unknown
    %p.datagroup-description#unmatched-persons-hint
      These people could not be matched within the portal:
      = @datacolumn.acknowledge_unknown
      = link_to "Delete this message", "#", {:id => "unmatched-persons-delete"}
  %p
    = select_tag "people[]", options_for_select(all_users_names_and_ids_for_select, @datacolumn.users.pluck(:id)), multiple: true, class: 'select form-control'
  = f.button :submit, class: "btn btn-outline-primary"

/ functions

// todo: test if this still works as expected
// when there is people mentioned in the workbook which do not match
// an entry in the database then you get this hint here.
:javascript
  jQuery(document).ready(function(){
    $("#unmatched-persons-delete").click(function(event) {
      $('#datacolumn_acknowledge_unknown').val('')
      $('#unmatched-persons-hint').css("text-decoration", "line-through")
      event.preventDefault();
    });
  });

// enable correct menu tab
:javascript
  $(document).ready(function() {
    $('#navigation_datasets_path').find('.nav-item').addClass('active');
  });


// setup the tag input field
:javascript
  $(function() {
    $("input[data-role=tagsinput], select[multiple][data-role=tagsinput]").tagsinput();
  });

// initialize selectpickers
:javascript
  $(document).on('turbolinks:load', function() {
    $('.select').selectpicker({
      liveSearch: true,
      liveSearchPlaceholder: "type to filter ...",
      actionsBox: true
    });
  });

  // fix style on cache reload of pickers
  $(document).on('turbolinks:before-cache', function() {
    $('.select').selectpicker('destroy').addClass('selectpicker')
  });
