/ head

/ body

- if @datacolumn.datagroup_approved && @datacolumn.datatype_approved

  .div.pb-3
    .font-weight-bold.text-dark
      Column:
    - if @datacolumn.columnheader.present?
      .font-weight-normal.text-dark
        = @datacolumn.columnheader
    - else
      .font-weight-normal.text-muted
        No information available

  %p
  %p
    Here you can browse and approve invalid values that we detected in your data
    column. Currently there are #{@count_of_all_invalid_values} invalid values.

  #accordion
    .card
      #heading_invalid_values_form
        .card-header
          %h5.mb-0
            %button.btn.btn-link{"aria-controls" => "collapse_invalid_values_form",
              "aria-expanded" => "true", "data-target" => "#collapse_invalid_values_form", "data-toggle" => "collapse"}
              Validate with form
      #collapse_invalid_values_form.collapse.show{"aria-labelledby" => "heading_invalid_values_form", "data-parent" => "#accordion"}
        .card-body
          - if @datacolumn.invalid_values.present?
            #invalid-values-form
              = form_tag update_invalid_values_datacolumn_path(@datacolumn) do
                %table#invalid-values-table
                  .mb-2
                    %thead
                      %tr
                        %th
                          Original
                        %th
                          Short
                        %th
                          Long
                        %th
                          Description
                  %tbody
                    - @datacolumn.invalid_values.each do |value|
                      %tr
                        %td
                          .div.pr-2
                            = value.import_value
                            = hidden_field_tag 'invalid_values[][import_value]', value.import_value
                        %td
                          = text_field_tag "invalid_values[][short]", value.import_value, { class: 'form-control'}
                        %td
                          = text_field_tag "invalid_values[][long]", "", { class: 'form-control'}
                        %td
                          = text_field_tag "invalid_values[][description]", "", { class: 'form-control'}

                .mt-4
                  = submit_tag "Approve", disabled: @count_of_all_invalid_values.zero?, class: 'btn btn-outline-primary'
          - else
            No invalid values present

    .card
      #heading_invalid_values_csv
        .card-header
          %h5.mb-0
            %button.btn.btn-link{"aria-controls" => "collapse_invalid_values_csv",
              "aria-expanded" => "true", "data-target" => "#collapse_invalid_values_csv", "data-toggle" => "collapse"}
              Validate with file
      #collapse_invalid_values_csv.collapse{"aria-labelledby" => "heading_invalid_values_csv", "data-parent" => "#accordion"}
        .card-body
          - if @datacolumn.invalid_values.present?
            %ul
              %li
                Step 1
                = link_to "Download CSV file of invalid values", approve_invalid_values_datacolumn_path(@datacolumn, :csv)
              %li
                Step 2
                Describe invalid values in the CSV file. (Delete rows of invalid
                values that you don't want to describe).
              %li
                Step 3
                Upload your CSV file
                .pt-2.pb-2
                  = form_tag update_invalid_values_with_csv_datacolumn_path(@datacolumn), multipart: true do
                    .custom-file
                      = file_field_tag :csvfile, accept: 'text/csv', disabled: @count_of_all_invalid_values.zero?, class: 'custom-file-input'
                      %label.custom-file-label
                        Select file
                    .pt-2.pb-2
                      = submit_tag "upload", disabled: @count_of_all_invalid_values.zero?, class: 'btn btn-outline-primary'
          - else
            No invalid values present

- else
  - if @datacolumn.datagroup_approved.blank?
    %p
      Please #{link_to 'Approve the datagroup', approve_datagroup_datacolumn_path(@datacolumn)} first.

  - if @datacolumn.datatype_approved.blank?
    %p
      Please #{link_to 'Approve the datatype', approve_datatype_datacolumn_path(@datacolumn)} first.

/ functions

// enable correct menu tab
:javascript
  $(document).ready(function() {
    $('#navigation_datasets_path').find('.nav-item').addClass('active');
  });
