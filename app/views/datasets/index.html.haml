/ head

// title
- page_title 'Datasets'

/ body

// heading
.div.pb-2.pl-2
  .font-weight-bold
    .text-muted.font-weight-bold
      %i.fas.fa-angle-double-right{style: 'vertical-align: middle;'}
      Index: datasets

// sidebar
= content_for :actions do
  #actions.pt-1
    // scroll up
    = link_to "<i class='fas fa-angle-double-up'></i>".html_safe, "#",
      { class: "btn btn-sm btn-outline-light text-secondary", id: "back-to-top",
      'data-toggle': "tooltip",
      'data-turbolinks': false,
      title: "Up" ,
      'data-placement': "auto"}
    // actions
    .div.pt-2.pb-2
      - unless current_user
        .btn.btn-sm.btn-outline-light
          .text-muted
            o

      / section tools
      - if current_user
        .border-top.border-right.border-left.rounded.top-2.pb-1
          %span{'data-toggle': 'tooltip', title: 'Tools section', 'data-placement': 'auto'}
            = link_to "<i class='fas fa-wrench'></i>".html_safe, "#",
              { class: "btn btn-sm btn-block btn-outline-light text-muted disabled",
                'data-turbolinks': false }
      // section tools content
      - if current_user
        .div.pt-2
          = link_to "<i class='fas fa-plus'></i>".html_safe, new_dataset_path,
            { class: "btn btn-sm btn-block btn-outline-light text-success",
            'data-toggle': "tooltip",
            title: "Add new dataset" ,
            'data-placement': "auto"}
          - if current_user.has_role?(:admin).present?
            = link_to "<i class='fas fa-network-wired'></i>".html_safe, datagroups_path,
              { class: "btn btn-sm btn-block btn-outline-light text-success",
              'data-toggle': "tooltip",
              title: "Manage datagroups" ,
              'data-placement': "auto"}
            = link_to "<i class='fas fa-list'></i>".html_safe, categories_path,
              { class: "btn btn-sm btn-block btn-outline-light text-success",
              'data-toggle': "tooltip",
              title: "Manage categories" ,
              'data-placement': "auto"}
            = link_to "<i class='fas fa-key'></i>".html_safe, keywords_path,
              { class: "btn btn-sm btn-block btn-outline-light text-success",
              'data-toggle': "tooltip",
              title: "Manage keywords" ,
              'data-placement': "auto"}
      // add a separator if more actions are appended
      -# .div.pb-4

    // scroll down
    = link_to "<i class='fas fa-angle-double-down'></i>".html_safe, "#",
      { class: "btn btn-sm btn-outline-light text-secondary", id: "back-to-bottom",
      'data-toggle': "tooltip",
      'data-turbolinks': false,
      title: "Down" ,
      'data-placement': "auto"}


// filters
.div.pl-2
  // search, select
  .pb-2.pt-3
    = simple_form_for :search, url: datasets_path, method: :get do |f|
      / search bar
      %h5
        Search:
      - if params.has_key?(:search) ? params[:search].has_key?(:query) : false
        = f.input :query, required: false, label: false do
          .input-group
            = f.input_field :query, class: "form-control", placeholder: "Type...", value: params[:search][:query]
            .input-group-append
              #search_button.btn.btn-outline-primary
                Submit
            .input-group-append
              = link_to "Reset", datasets_path, class: "btn btn-outline-primary"
      - else
        = f.input :query, required: false, label: false do
          .input-group
            = f.input_field :query, class: "form-control", placeholder: "Type...", value: ""
            .input-group-append
              #search_button.btn.btn-outline-primary
                Submit
            .input-group-append
              = link_to "Reset", datasets_path, class: "btn btn-outline-primary"
      / project phase
      .pt-2
        %h5
          Select:
        - if PHASE_CONFIG.present?
          - if params.has_key?(:search) ? params[:search].has_key?(:project_phase) : false
            = f.input :project_phase,
              as: :select,
              label: "Project Phase",
              required: false,
              collection: all_project_phases_for_select,
              selected: params[:search][:project_phase],
              input_html: { multiple: true, class: "facet_select"}
          - else
            = f.input :project_phase,
              as: :select,
              label: "Project Phase",
              required: false,
              collection: all_project_phases_for_select,
              input_html: { multiple: true, class: "facet_select"}
        / access rights
        - if params.has_key?(:search) ? params[:search].has_key?(:access_code) : false
          = f.input :access_code,
            as: :select,
            label: "Access Rights",
            required: false,
            collection: all_dataset_access_righs_for_select,
            selected: params[:search][:access_code],
            input_html: { multiple: true, class: "facet_select"}
        - else
          = f.input :access_code,
            as: :select,
            label: "Access Rights",
            required: false,
            collection: all_dataset_access_righs_for_select,
            input_html: { multiple: true, class: "facet_select"}
        / access rights
        - if params.has_key?(:search) ? params[:search].has_key?(:tag) : false
          = f.input :tag,
            as: :select,
            label: "Keywords",
            required: false,
            collection: all_dataset_tags_for_select,
            selected: params[:search][:tag],
            input_html: { multiple: true, class: "facet_select"}
        - else
          = f.input :tag,
            as: :select,
            label: "Keyword",
            required: false,
            collection: all_dataset_tags_for_select,
            input_html: { multiple: true, class: "facet_select"}
        = f.button :submit, "Submit", class: "btn btn-outline-primary", :style => "display: none;"

  // sorting
  .div.pb-4
    %h5
      Sort:
    .btn-group
      #sort_button.btn.btn-outline-light.gray-border
        = sortable "title"
      #sort_button.btn.btn-outline-light.gray-border
        = sortable "created_at", "Created", "numeric"
      #sort_button.btn.btn-outline-light.gray-border
        = sortable "updated_at", "Updated", "numeric"

  // cards listing datasets
  - if @datasets.present?
    .card-columns.single
      - @datasets.each do |dataset|
        = render partial: dataset
  - else
    There are no results for your query

  // pagination
  .div
    .pt-3
      != pagy_bootstrap_nav @pagy


/ scripts

// initialize selectpickers
:javascript
  $(document).on('turbolinks:load', function() {
    $('.facet_select').selectpicker({
      liveSearch: true,
      liveSearchPlaceholder: "type to filter ...",
      actionsBox: true
    });
  });

  // fix style on cache reload of pickers
  $(document).on('turbolinks:before-cache', function() {
    $('.facet_select').selectpicker('destroy').addClass('selectpicker')
  });

// submit the form
:javascript
  // when selection is changed
  $(document).ready(function() {
    $('select').on('change', function() {
      var $form = $(this).closest('form');
      $form.find('input[type=submit]').click();
    });
  });

  // when search button is clicked
  $(document).ready(function() {
    $('#search_button').click(function () {
      var $form = $(this).closest('form');
      $form.find('input[type=submit]').click();
    });
  });

// setup hover shadow on the cards
:javascript
  $(document).ready(function() {
    $( ".card" ).hover(
      function() {
        $(this).addClass('shadow').css('cursor', 'pointer');
      }, function() {
        $(this).removeClass('shadow');
      }
    );
  });

// scroll buttons in action bar
:javascript
  $(document).ready(function(){
    // scroll up
    $('#back-to-top').click(function () {
      $('body,html').animate({
        scrollTop: 0
          }, 400);
            return false;
    });

    // scroll down
    $('#back-to-bottom').click(function () {
      $('body,html').animate({
        scrollTop: $('html, body').get(0).scrollHeight
          }, 400);
            return false;
    });
  });
